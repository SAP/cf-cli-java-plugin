name: Deploy Petclinic with SapMachine & OpenJDK

on:
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout this repo (must contain test.py)
        uses: actions/checkout@v3

      - name: Checkout Spring Petclinic
        uses: actions/checkout@v3
        with:
          repository: spring-projects/spring-petclinic
          path: petclinic

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Build app
        run: |
          cd petclinic
          ./mvnw clean package -DskipTests

      - name: Install CF CLI
        run: |
          curl -L "https://packages.cloudfoundry.org/stable?release=linux64" | tar -zx
          sudo mv cf /usr/local/bin

      - name: Log in to Cloud Foundry
        run: |
          cf api "$CF_API" --skip-ssl-validation
          cf auth "$CF_USERNAME" "$CF_PASSWORD"
          cf target -o "$CF_ORG" -s "$CF_SPACE"
        env:
          CF_API: ${{ secrets.CF_API }}
          CF_USERNAME: ${{ secrets.CF_USERNAME }}
          CF_PASSWORD: ${{ secrets.CF_PASSWORD }}
          CF_ORG: ${{ secrets.CF_ORG }}
          CF_SPACE: ${{ secrets.CF_SPACE }}

      - name: Set app names with timestamp
        id: vars
        run: |
          echo "suffix=$(date +%s)" >> "$GITHUB_OUTPUT"

      - name: Deploy with SapMachine 21
        run: |
          export NAME="petclinic-sapmachine-${{ steps.vars.outputs.suffix }}"
          cat <<EOF > manifest.yml
          applications:
          - name: $NAME
            memory: 768M
            instances: 1
            path: petclinic/target/*.jar
            buildpacks:
              - java_buildpack
            env:
              JBP_CONFIG_OPEN_JDK_JRE: '{ jre: { version: 21.+, jre: { distribution: "sapmachine" } } }'
          EOF
          cf push -f manifest.yml
          echo "sap_app=$NAME" >> $GITHUB_ENV

      - name: Deploy with OpenJDK 21
        run: |
          export NAME="petclinic-openjdk-${{ steps.vars.outputs.suffix }}"
          cat <<EOF > manifest.yml
          applications:
          - name: $NAME
            memory: 768M
            instances: 1
            path: petclinic/target/*.jar
            buildpacks:
              - java_buildpack
            env:
              JBP_CONFIG_OPEN_JDK_JRE: '{ jre: { version: 21.+, jre: { distribution: "openjdk" } } }'
          EOF
          cf push -f manifest.yml
          echo "openjdk_app=$NAME" >> $GITHUB_ENV

      - name: Run test.py with deployed app names
        run: |
          python test.py "$sap_app" "$openjdk_app"
